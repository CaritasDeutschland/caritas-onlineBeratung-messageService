# This file contains general application properties.
# All properties that are environment specific are in their related property file (like database login data, logging level, etc.).

# Currently active profile
spring.profiles.active=@activeSpringProfile@

# General app settings
server.port=8080

spring.mvc.locale=de_DE
spring.jackson.time-zone=Europe/Berlin

service.encryption.appkey=

# Logging: SLF4J (via Lombok)
logging.file=log/messageservice.log

# Base URL of the application
app.base.url=https://<host>

# Keycloak
keycloakService.user.role=user
keycloakService.consultant.role=consultant
keycloakService.user.dummyPrefix=@caritas-online-beratung.de
keycloakApi.error.email=User exists with same email
keycloakApi.error.username=User exists with same username

# Rocket.Chat
rocket.chat.header.auth.token=X-Auth-Token
rocket.chat.header.user.id=X-User-Id
rocket.chat.query.param.room.id=roomId
rocket.chat.query.param.offset=offset
rocket.chat.query.param.count=count
rocket.chat.query.param.sort=sort
rocket.chat.query.param.sort.value={"ts":1}
rocket.chat.api.url=${app.base.url}/api/v1
rocket.chat.api.get.group.message.url=${rocket.chat.api.url}/groups.messages
rocket.chat.api.post.message.url=${rocket.chat.api.url}/chat.postMessage
rocket.chat.api.user.login=${rocket.chat.api.url}/login
rocket.chat.api.user.logout=${rocket.chat.api.url}/logout
rocket.chat.api.post.group.messages.read.url=${rocket.chat.api.url}/subscriptions.read
rocket.technical.username=
rocket.credentialscheduler.cron=0 0 0/1 * * ?

# Springfox/API documentation
springfox.docuTitle=Caritas Online Beratung: MessageService
springfox.docuDescription=Provides a REST API service to provide user information and actions.
springfox.docuVersion=0.0.1
springfox.docuTermsUrl=
springfox.docuContactName=
springfox.docuContactUrl=
springfox.docuContactEmail=
springfox.docuLicense=Apache 2.0
springfox.docuLicenseUrl=http://www.apache.org/licenses/LICENSE-2.0.html
springfox.docuPath=/messages/docs

# UserService API
user.service.api.url=${app.base.url}:${server.port}/users
user.service.api.new.message.notification=${user.service.api.url}/mails/messages/new
user.service.api.new.feedback.message.notification=${user.service.api.url}/mails/messages/feedback/new

# CSRF token
csrf.header.property=
csrf.cookie.property=